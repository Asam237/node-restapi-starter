{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Node RestAPI Started",
    "description": "My Node RestAPI Started Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3010",
  "basePath": "/",
  "tags": [
    {
      "name": "Register",
      "description": "API for register in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/create": {
      "post": {
        "tags": ["Register"],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Login"],
        "description": "Login user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to logged-in",
            "schema": {
              "$ref": "#/definitions/UserLogged"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User is logged-in",
            "schema": {
              "$ref": "#/definitions/UserLogged"
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/tasks/create": {
      "post": {
        "tags": ["Tasks"],
        "description": "Create new task in system",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task that we want to create",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New task is created",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of task that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete task with given ID",
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "description": "Tasks is deleted",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get all comments in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        }
      }
    },
    "/comments/create": {
      "post": {
        "tags": ["Comments"],
        "description": "Create new comment in system",
        "parameters": [
          {
            "name": "comment",
            "in": "body",
            "description": "Comment that we want to create",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New comment is created",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of comment that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete comment with given ID",
        "tags": ["Comments"],
        "responses": {
          "200": {
            "description": "Comment is deleted",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "fullname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLogged": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Tasks": {
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "checked": {
          "type": "boolean"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "Comments": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "task": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}
